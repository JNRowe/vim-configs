#! /bin/zsh -f

setopt err_exit no_unset

zmodload -F zsh/zutil +b:zparseopts

# • ``^::$``
#       Vim code block using Sphinx’s ``highlight_language`` setting
# • ``^\.\. code-block:: vim$``
#       Code block with explicit vim language
# • ``^[^\. ][^\.].*::$``
#       Implied code block via ``::`` suffixed line, skipping lines that are
#       reST directives
start_block='^(::|\.\. code-block:: vim|[^\. ][^\.].*::)$'

typeset -A args
zparseopts -D -K -E -A args d:

if [[ -z ${1:-} ]] {
    echo "Error: No input given"
    exit 2
} elif [[ -z ${2:-} ]] {
    echo "Error: No output given"
    exit 2
}

input=$1
output=$2
typeset -U deps=()

(( ${_RST2HTML_no_wipe:-0} )) || : >| $output

in_block=0
while IFS='' read -r line; do
    if [[ $line =~ '^.. include:: (.*)' ]] {
        _RST2HTML_no_wipe=1 $0 ${input:h}/$match $output
        deps+=(${input:h}/$match)
    } elif [[ $line =~ $start_block ]] {
        in_block=1
    } elif [[ $line =~ '^[^ ]' ]] {
        in_block=0
    } elif (( $in_block )) && [[ -n $line ]] {
        echo -E "${line[5,-1]}" >> $output
    }
done < $input

[[ -n ${args[(I)-d]} ]] && [[ $deps ]] && echo $output: $deps >| ${args[-d]}

:
